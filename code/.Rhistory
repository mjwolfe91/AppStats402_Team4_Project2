ggtitle("PCA of Framingham Heart Disease Data")
pc.result<-prcomp(numeric_cols,scale.=TRUE)
pc.scores<-pc.result$x
pc.scores<-data.frame(pc.scores)
pc.scores$TenYearCDH<-heartData$TenYearCHD
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCDH), size=1)+
ggtitle("PCA of Framingham Heart Disease Data")
install.packages("rgl")
p1<-ggplot(heartData,aes(x=TenYearCHD,y=~)
p1<-ggplot(heartData,aes(x=TenYearCHD,y=~))
ggplot(heartData,aes(x=TenYearCHD,y=~))
ggplot(heartData,aes(x=TenYearCHD,y= ~ ))
ggplot(heartData,aes(x=TenYearCHD,y=diaBP))
#p1+geom_point(aes(color=sales))
#p1+geom_point(shape=21,size=2.5)+scale_fill_gradient(low='white', high='blue')
simple.fit<-lm(TenYearCHD~., data=heartData)
plot3d(heartData)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
install.packages("tree")
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
simple.fit<-lm(TenYearCHD~., data=heartData)
plot3d(heartData)
surface3d(0:300,0:50,outer(0:300,0:50,function(x,y) {2.92+.04575*x+.18799*y}),alpha=.4)
short.tree<-tree(TenYearCHD~., data=heartData, mincut=50)
summary(short.tree)
plot(short.tree)
text(short.tree)
rf.car<-randomForest(High~.-Sales,Carseats,subset=train,mtry=5,importance=T,ntree=100)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
colSums(numeric_cols)
colSums(is.na(heartData))
summary(heartData)
dim(heartData)
dim(na.omit(heartData))
3658/4240
heartData = na.omit(heartData)
dim(heartData)
summary(heartData)
levels(heartData$TenYearCHD)
heartData$TenYearCHD = relevel(heartData$TenYearCHD, ref='No')
aggregate(glucose~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=glucose)) + geom_boxplot()
aggregate(heartRate~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=heartRate)) + geom_boxplot()
aggregate(BMI~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=BMI)) + geom_boxplot()
aggregate(diaBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=diaBP)) + geom_boxplot()
aggregate(sysBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=sysBP)) + geom_boxplot()
aggregate(totChol~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=totChol)) + geom_boxplot()
aggregate(cigsPerDay~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=cigsPerDay)) + geom_boxplot()
aggregate(age~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=age)) + geom_boxplot()
for (i in colnames(numeric_cols)){
hist(heartData[[i]])
}
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=TenYearCHD)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=TenYearCDH)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=TenYearCHD)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=heartData$TenYearCHD)
heartData.cor <- heartData %>% select(age, cigsPerDay, totChol, sysBP, diaBP, BMI, heartRate, glucose) %>%
cor()
heartData.cor
heatmap.2(heartData.cor,col=redgreen(20),
density.info="none", trace="none", dendrogram=c("row"),
symm=F,symkey=T,symbreaks=T, scale="none")
attach(heartData)
prop.table(table(TenYearCHD,diabetes),2)
plot(TenYearCHD~diabetes,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentHyp),2)
plot(TenYearCHD~prevalentHyp,col=c("red","blue"))
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
colSums(numeric_cols)
colSums(is.na(heartData))
summary(heartData)
dim(heartData)
dim(na.omit(heartData))
3658/4240
heartData = na.omit(heartData)
dim(heartData)
summary(heartData)
levels(heartData$TenYearCHD)
heartData$TenYearCHD = relevel(heartData$TenYearCHD, ref='No')
aggregate(glucose~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=glucose)) + geom_boxplot()
aggregate(heartRate~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=heartRate)) + geom_boxplot()
aggregate(BMI~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=BMI)) + geom_boxplot()
aggregate(diaBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=diaBP)) + geom_boxplot()
aggregate(sysBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=sysBP)) + geom_boxplot()
aggregate(totChol~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=totChol)) + geom_boxplot()
aggregate(cigsPerDay~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=cigsPerDay)) + geom_boxplot()
aggregate(age~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=age)) + geom_boxplot()
for (i in colnames(numeric_cols)){
hist(heartData[[i]])
}
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=heartData$TenYearCHD)
heartData.cor <- heartData %>% select(age, cigsPerDay, totChol, sysBP, diaBP, BMI, heartRate, glucose) %>%
cor()
heartData.cor
heatmap.2(heartData.cor,col=redgreen(20),
density.info="none", trace="none", dendrogram=c("row"),
symm=F,symkey=T,symbreaks=T, scale="none")
attach(heartData)
prop.table(table(TenYearCHD,diabetes),2)
plot(TenYearCHD~diabetes,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentHyp),2)
plot(TenYearCHD~prevalentHyp,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentStroke),2)
plot(TenYearCHD~prevalentStroke,col=c("red","blue"))
prop.table(table(TenYearCHD,BPMeds),2)
plot(TenYearCHD~BPMeds,col=c("red","blue"))
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~currentSmoker,col=c("red","blue"))
prop.table(table(TenYearCHD,education),2)
mosaicplot(TenYearCHD~education, las=1, main = 'Education vs Heart Disease')
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~Gender,col=c("red","blue"), las=1)
ftable(addmargins(table(heartData$TenYearCHD,heartData$currentSmoker)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$Gender)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$education)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$BPMeds)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentStroke)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentHyp)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$diabetes)))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
simple.fit<-lm(TenYearCHD~., data=heartData)
plot3d(heartData)
surface3d(0:300,0:50,outer(0:300,0:50,function(x,y) {2.92+.04575*x+.18799*y}),alpha=.4)
pc.result<-prcomp(numeric_cols,scale.=TRUE)
pc.scores<-pc.result$x
pc.scores<-data.frame(pc.scores)
pc.scores$TenYearCDH<-heartData$TenYearCHD
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCDH), size=1)+
ggtitle("PCA of Framingham Heart Disease Data")
smp_size <- floor(0.75 * nrow(heartData))
set.seed(123)
train_ind <- sample(seq_len(nrow(heartData)), size = smp_size)
train <- heartData[train_ind, ]
test <- heartData[-train_ind, ]
smp_size <- floor(0.75 * nrow(heartData))
set.seed(123)
train_ind <- sample(seq_len(nrow(heartData)), size = smp_size)
heartData.train <- heartData[train_ind, ]
heartData.test <- heartData[-train_ind, ]
heartData.rf<-randomForest(TenYearCHD~.subset=heartData.train,mtry=5,importance=T,ntree=100)
heartData.rf<-randomForest(TenYearCHD~., subset=heartData.train,mtry=5,importance=T,ntree=100)
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(rf.car,newdata=heartData.test,type="response")
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(heartData.rf,newdata=heartData.test,type="response")
table(fit.pred,Carseats.test$High)
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(heartData.rf,newdata=heartData.test,type="response")
table(fit.pred,heartData.test$TenYearCHD)
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(heartData.rf,newdata=heartData.test,type="response")
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(heartData.rf,newdata=heartData.test,type="response")
table(fit.pred,heartData.test$TenYearCHD)
rf.pred<-predict(heartData.pred,newdata=heartData.test,type="prob")
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- predict(rf.pred[,2], heartData.test$TenYearCHD)
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
install.packages("ROCR")
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
library(ROCR)
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
uc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
plot(roc.perf,main="AUC of Test set of a Single Tree")
abline(a=0, b= 1)
text(x = .40, y = .6,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
varImpPlot (heartData.rf,type=1,main="Variable Importance")
varImpPlot (heartData.rf,type=2,main="Variable Importance")
varImpPlot (heartData.rf,type=1,main="Variable Importance")
varImpPlot (heartData.rf,type=2,main="Variable Importance")
attach(heartData)
plot3d(sysBP,totChol,age,col=ifelse(High=="Yes","red","black"),size=4)
varImpPlot (heartData.rf,type=1,main="Variable Importance")
varImpPlot (heartData.rf,type=2,main="Variable Importance")
attach(heartData)
plot3d(sysBP,totChol,age,col=ifelse(TenYearCHD=="Yes","red","black"),size=4)
index1<-which(ShelveLoc=="Bad")
library(glmnet)
library(ROCR)
library(MASS)
library(ggplot2)
library(pheatmap)
library(randomForest)
dat <- read.csv("C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Unit 13/Unit13/CancerExample.csv", header = TRUE)
dat.train <- dat[which(dat$Set == "Training"),]
dat.train.x <- dat.train[,6:ncol(dat)]
View(dat.train.x)
View(dat.train.x)
View(dat.train)
View(dat.train)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
library(ROCR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
colSums(numeric_cols)
colSums(is.na(heartData))
summary(heartData)
dim(heartData)
dim(na.omit(heartData))
3658/4240
heartData = na.omit(heartData)
dim(heartData)
summary(heartData)
levels(heartData$TenYearCHD)
heartData$TenYearCHD = relevel(heartData$TenYearCHD, ref='No')
aggregate(glucose~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=glucose)) + geom_boxplot()
aggregate(heartRate~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=heartRate)) + geom_boxplot()
aggregate(BMI~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=BMI)) + geom_boxplot()
aggregate(diaBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=diaBP)) + geom_boxplot()
aggregate(sysBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=sysBP)) + geom_boxplot()
aggregate(totChol~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=totChol)) + geom_boxplot()
aggregate(cigsPerDay~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=cigsPerDay)) + geom_boxplot()
aggregate(age~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=age)) + geom_boxplot()
for (i in colnames(numeric_cols)){
hist(heartData[[i]])
}
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=heartData$TenYearCHD)
heartData.cor <- heartData %>% select(age, cigsPerDay, totChol, sysBP, diaBP, BMI, heartRate, glucose) %>%
cor()
heartData.cor
heatmap.2(heartData.cor,col=redgreen(20),
density.info="none", trace="none", dendrogram=c("row"),
symm=F,symkey=T,symbreaks=T, scale="none")
attach(heartData)
prop.table(table(TenYearCHD,diabetes),2)
plot(TenYearCHD~diabetes,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentHyp),2)
plot(TenYearCHD~prevalentHyp,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentStroke),2)
plot(TenYearCHD~prevalentStroke,col=c("red","blue"))
prop.table(table(TenYearCHD,BPMeds),2)
plot(TenYearCHD~BPMeds,col=c("red","blue"))
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~currentSmoker,col=c("red","blue"))
prop.table(table(TenYearCHD,education),2)
mosaicplot(TenYearCHD~education, las=1, main = 'Education vs Heart Disease')
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~Gender,col=c("red","blue"), las=1)
ftable(addmargins(table(heartData$TenYearCHD,heartData$currentSmoker)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$Gender)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$education)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$BPMeds)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentStroke)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentHyp)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$diabetes)))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
pc.scores<-pc.result$x
pc.scores<-data.frame(pc.scores)
pc.scores$TenYearCDH<-heartData$TenYearCHD
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCDH), size=1)+
ggtitle("PCA of Framingham Heart Disease Data")
simple.fit<-lm(TenYearCHD~., data=heartData)
plot3d(heartData)
surface3d(0:300,0:50,outer(0:300,0:50,function(x,y) {2.92+.04575*x+.18799*y}),alpha=.4)
smp_size <- floor(0.75 * nrow(heartData))
set.seed(123)
train_ind <- sample(seq_len(nrow(heartData)), size = smp_size)
heartData.train <- heartData[train_ind, ]
heartData.test <- heartData[-train_ind, ]
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(heartData.rf,newdata=heartData.test,type="response")
table(fit.pred,heartData.test$TenYearCHD)
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
plot(roc.perf,main="AUC of Test set of a Single Tree")
abline(a=0, b= 1)
text(x = .40, y = .6,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
varImpPlot (heartData.rf,type=1,main="Variable Importance")
varImpPlot (heartData.rf,type=2,main="Variable Importance")
attach(heartData)
plot3d(sysBP,totChol,age,col=ifelse(TenYearCHD=="Yes","red","black"),size=4)
#index1<-which(Indexwhich=="Bad")
#plot3d(sysBP[index1],totChol[index1],age[index1],col=ifelse(TenYearCHD=="Yes","red","black")[index1],size=4)
#index2<-which(Indexwhich=="Medium")
#plot3d(sysBP[index2],totChol[index2],age[index2],col=ifelse(TenYearCHD=="Yes","red","black")[index2],size=4)
#index3<-which(Indexwhich=="GoIndexwhichod")
#plot3d(sysBP[index3],totChol[index3],age[index3],col=ifelse(TenYearCHD=="Yes","red","black")[index3],size=4)
heartData.train.x <- numeric_cols
heartData.train.y <- heartData.train$TenYearCHD
fit.lda <- lda(heartData.train.y ~ ., data = heartData.train.x)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD, age))
heartData.train.x <- numeric_cols
heartData.train.y <- heartData.train$TenYearCHD
fit.lda <- lda(heartData.train.y ~ ., data = heartData.train.x)
sapply(heartData, class)
sapply(heartData.train, class)
dat.train.y <- dat.train$Censor
dat.train.y <- as.factor(as.character(dat.train.y))
fit.lda <- lda(dat.train.y ~ ., data = dat.train.x)
pred.lda <- predict(fit.lda, newdata = dat.train.x)
preds <- pred.lda$posterior
preds <- as.data.frame(preds)
pred <- prediction(preds[,2],dat.train.y)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
plot(roc.perf)
abline(a=0, b= 1)
text(x = .40, y = .6,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
heartData.train.x <- heartData.train[,1:ncol(dat)-1]
View(heartData.train.x)
View(heartData.train.x)
View(heartData.train)
View(heartData.train)
heartData.train.x <- heartData.train[,1:ncol(heartData.train)-1]
heartData.train.x <- heartData.train[,1:ncol(heartData.train)-1]
heartData.train.y <- heartData.train$TenYearCHD
fit.lda <- lda(heartData.train.y ~ ., data = heartData.train.x)
pred.lda <- predict(fit.lda, newdata = heartData.train.x)
preds <- pred.lda$posterior
preds <- as.data.frame(preds)
pred <- prediction(preds[,2],heartData.train.y)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
plot(roc.perf)
abline(a=0, b= 1)
text(x = .40, y = .6,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
heartData.train.x <- heartData.train[,1:ncol(heartData.train)-1]
heartData.train.y <- heartData.train$TenYearCHD
fit.lda <- lda(heartData.train.y ~ ., data = heartData.train.x)
pred.lda <- predict(fit.lda, newdata = heartData.train.x)
preds <- pred.lda$posterior
preds <- as.data.frame(preds)
pred <- prediction(preds[,2],heartData.train.y)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
plot(roc.perf)
abline(a=0, b= 1)
text(x = .40, y = .6,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
