ggplot(heartData, aes(x=TenYearCHD, y=sysBP)) + geom_boxplot()
aggregate(totChol~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=totChol)) + geom_boxplot()
aggregate(cigsPerDay~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=cigsPerDay)) + geom_boxplot()
aggregate(age~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=age)) + geom_boxplot()
for (i in colnames(numeric_cols)){
hist(heartData[[i]])
}
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=heartData$TenYearCHD)
heartData.cor <- heartData %>% select(age, cigsPerDay, totChol, sysBP, diaBP, BMI, heartRate, glucose) %>%
cor()
heartData.cor
heatmap.2(heartData.cor,col=redgreen(20),
density.info="none", trace="none", dendrogram=c("row"),
symm=F,symkey=T,symbreaks=T, scale="none")
attach(heartData)
prop.table(table(TenYearCHD,diabetes),2)
plot(TenYearCHD~diabetes,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentHyp),2)
plot(TenYearCHD~prevalentHyp,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentStroke),2)
plot(TenYearCHD~prevalentStroke,col=c("red","blue"))
prop.table(table(TenYearCHD,BPMeds),2)
plot(TenYearCHD~BPMeds,col=c("red","blue"))
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~currentSmoker,col=c("red","blue"))
prop.table(table(TenYearCHD,education),2)
mosaicplot(TenYearCHD~education, las=1, main = 'Education vs Heart Disease')
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~Gender,col=c("red","blue"), las=1)
ftable(addmargins(table(heartData$TenYearCHD,heartData$currentSmoker)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$Gender)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$education)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$BPMeds)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentStroke)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentHyp)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$diabetes)))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes))
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
library(ROCR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes))
colSums(numeric_cols)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
library(ROCR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes))
colSums(numeric_cols)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
library(ROCR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
colSums(numeric_cols)
colSums(is.na(heartData))
summary(heartData)
dim(heartData)
dim(na.omit(heartData))
3658/4240
heartData = na.omit(heartData)
dim(heartData)
summary(heartData)
levels(heartData$TenYearCHD)
heartData$TenYearCHD = relevel(heartData$TenYearCHD, ref='No')
aggregate(glucose~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=glucose)) + geom_boxplot()
aggregate(heartRate~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=heartRate)) + geom_boxplot()
aggregate(BMI~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=BMI)) + geom_boxplot()
aggregate(diaBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=diaBP)) + geom_boxplot()
aggregate(sysBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=sysBP)) + geom_boxplot()
aggregate(totChol~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=totChol)) + geom_boxplot()
aggregate(cigsPerDay~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=cigsPerDay)) + geom_boxplot()
aggregate(age~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=age)) + geom_boxplot()
for (i in colnames(numeric_cols)){
hist(heartData[[i]])
}
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=heartData$TenYearCHD)
heartData.cor <- heartData %>% select(age, cigsPerDay, totChol, sysBP, diaBP, BMI, heartRate, glucose) %>%
cor()
heartData.cor
heatmap.2(heartData.cor,col=redgreen(20),
density.info="none", trace="none", dendrogram=c("row"),
symm=F,symkey=T,symbreaks=T, scale="none")
attach(heartData)
prop.table(table(TenYearCHD,diabetes),2)
plot(TenYearCHD~diabetes,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentHyp),2)
plot(TenYearCHD~prevalentHyp,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentStroke),2)
plot(TenYearCHD~prevalentStroke,col=c("red","blue"))
prop.table(table(TenYearCHD,BPMeds),2)
plot(TenYearCHD~BPMeds,col=c("red","blue"))
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~currentSmoker,col=c("red","blue"))
prop.table(table(TenYearCHD,education),2)
mosaicplot(TenYearCHD~education, las=1, main = 'Education vs Heart Disease')
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~Gender,col=c("red","blue"), las=1)
ftable(addmargins(table(heartData$TenYearCHD,heartData$currentSmoker)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$Gender)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$education)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$BPMeds)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentStroke)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentHyp)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$diabetes)))
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
pc.scores<-pc.result$x
pc.scores<-data.frame(pc.scores)
pc.scores$TenYearCDH<-heartData$TenYearCHD
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCDH), size=1)+
ggtitle("PCA of Framingham Heart Disease Data")
simple.fit<-lm(TenYearCHD~., data=heartData)
plot3d(heartData)
surface3d(0:300,0:50,outer(0:300,0:50,function(x,y) {2.92+.04575*x+.18799*y}),alpha=.4)
smp_size <- floor(0.75 * nrow(heartData))
set.seed(123)
train_ind <- sample(seq_len(nrow(heartData)), size = smp_size)
heartData.train <- heartData[train_ind, ]
heartData.test <- heartData[-train_ind, ]
heartData.rf<-randomForest(TenYearCHD~., data=heartData.train,mtry=5,importance=T,ntree=100)
fit.pred<-predict(heartData.rf,newdata=heartData.test,type="response")
table(fit.pred,heartData.test$TenYearCHD)
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
pred <- prediction(rf.pred[,2], heartData.test$TenYearCHD)
roc.perf = performance(pred, measure = "tpr", x.measure = "fpr")
auc.train <- performance(pred, measure = "auc")
auc.train <- auc.train@y.values
plot(roc.perf,main="AUC of Test set of a Single Tree")
abline(a=0, b= 1)
text(x = .40, y = .6,paste("AUC = ", round(auc.train[[1]],3), sep = ""))
varImpPlot (heartData.rf,type=1,main="Variable Importance")
varImpPlot (heartData.rf,type=2,main="Variable Importance")
attach(heartData)
plot3d(sysBP,totChol,age,col=ifelse(TenYearCHD=="Yes","red","black"),size=4)
#index1<-which(Indexwhich=="Bad")
#plot3d(sysBP[index1],totChol[index1],age[index1],col=ifelse(TenYearCHD=="Yes","red","black")[index1],size=4)
#index2<-which(Indexwhich=="Medium")
#plot3d(sysBP[index2],totChol[index2],age[index2],col=ifelse(TenYearCHD=="Yes","red","black")[index2],size=4)
#index3<-which(Indexwhich=="GoIndexwhichod")
#plot3d(sysBP[index3],totChol[index3],age[index3],col=ifelse(TenYearCHD=="Yes","red","black")[index3],size=4)
heartData.train.x <- heartData.train[,1:ncol(heartData.train)-1]
heartData.train.y <- heartData.train$TenYearCHD
fit.lda <- lda(heartData.train.y ~ ., data = heartData.train.x)
par(mfrow=c(1,1))
tree.deep<-tree(TenYearCHD~., data=heartData.train) #default is for atleast 5 observations in the child nodes for split to occur
summary(mytree)
par(mfrow=c(1,1))
tree.deep<-tree(TenYearCHD~., data=heartData.train) #default is for atleast 5 observations in the child nodes for split to occur
summary(tree.deep)
plot(tree.deep)
text(tree.deep,pretty=0)
par(mfrow=c(1,1))
tree.deep<-tree(TenYearCHD~., data=heartData.train) #default is for atleast 5 observations in the child nodes for split to occur
summary(tree.deep)
plot(tree.deep)
text(tree.deep,pretty=0)
set.seed(123)
cv.adver=cv.tree(tree.deep,FUN=prune.tree,method="deviance")
names(cv.adver)
cv.adver
plot(cv.adver)
par(mfrow=c(1,1))
plot(cv.adver$size,cv.adver$dev,type="b")
par(mfrow=c(1,1))
tree.deep<-tree(TenYearCHD~., data=heartData.train) #default is for atleast 5 observations in the child nodes for split to occur
summary(tree.deep)
plot(tree.deep)
text(tree.deep,pretty=0)
set.seed(123)
cv.chd=cv.tree(tree.deep,FUN=prune.tree,method="deviance")
names(cv.chd)
cv.chd
plot(cv.chd)
par(mfrow=c(1,1))
plot(cv.chd$size,cv.chd$dev,type="b")
par(mfrow=c(1,1))
tree.deep<-tree(TenYearCHD~., data=heartData) #default is for atleast 5 observations in the child nodes for split to occur
summary(tree.deep)
plot(tree.deep)
text(tree.deep,pretty=0)
set.seed(123)
cv.chd=cv.tree(tree.deep,FUN=prune.tree,method="deviance")
names(cv.chd)
cv.chd
plot(cv.chd)
par(mfrow=c(1,1))
plot(cv.chd$size,cv.chd$dev,type="b")
par(mfrow=c(1,1))
tree.deep<-tree(TenYearCHD~., data=heartData) #default is for atleast 5 observations in the child nodes for split to occur
summary(tree.deep)
plot(tree.deep)
text(tree.deep,pretty=0)
set.seed(123)
cv.chd=cv.tree(tree.deep,FUN=prune.tree,method="deviance")
names(cv.chd)
cv.chd
plot(cv.chd)
par(mfrow=c(1,1))
plot(cv.chd$size,cv.chd$dev,type="b")
prune.chd=prune.tree(tree.deep,best=8)
plot(prune.chd)
text(prune.chd,pretty=0)
train.tree<-tree(TenYearCHD~.,data=heartData.train)
summary(train.tree)
plot(train.tree)
text(train.tree,pretty=0)
plot(cv.tree(train.tree,FUN=prune.tree,method="deviance"))
train.tree<-tree(TenYearCHD~.,data=heartData.train)
summary(train.tree)
plot(train.tree)
text(train.tree,pretty=0)
plot(cv.tree(train.tree,FUN=prune.tree,method="deviance"))
testMSE<-mean((test$sales- predict(train.tree,newdata=heartData.test) )^2)
train.tree<-tree(TenYearCHD~.,data=heartData.train)
summary(train.tree)
plot(train.tree)
text(train.tree,pretty=0)
plot(cv.tree(train.tree,FUN=prune.tree,method="deviance"))
testMSE<-mean((heartData$TenYearCHD- predict(train.tree,newdata=heartData.test) )^2)
testMSE<-mean((heartData$TenYearCHD- predict(train.tree,newdata=heartData.test) )^2)
train.tree<-tree(TenYearCHD~.,data=heartData.train)
summary(train.tree)
plot(train.tree)
text(train.tree,pretty=0)
plot(cv.tree(train.tree,FUN=prune.tree,method="deviance"))
mytree<-tree(TenYearCHD~.,data=heartData.train)
yhat.tree<-predict(mytree,newdata=heartData.test)
plot(yhat.tree,heartData.test$TenYearCHD,main="Single Tree with 8 splits",xlab="Predicted",ylab="Ten Year CHD")
mytree<-tree(TenYearCHD~.,data=heartData.train,minsize=8,mindev=.0001)
yhat.tree<-predict(mytree,newdata=heartData.test)
plot(yhat.tree,heartData.test$TenYearCHD,main="Single Tree with Deep Splits",xlab="Predicted",ylab="Ten Year CHD")
abline(0,1)
summary(yhat.tree)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
library(dplyr)
library(ggplot2)
library(gplots)
library(randomForest)
library(rgl)
library(tree)
library(ISLR)
library(ROCR)
heartURL <- getURL("https://raw.githubusercontent.com/mjwolfe91/AppStats402_Team4_Project2/master/data/framingham.csv")
heartData <- read.csv(text=heartURL, header=TRUE)
#heartData <- read.csv('C:/Users/micha/OneDrive/Desktop/SMU MSDS/Applied Stats/Project 2/Data/framingham.csv')
head(heartData)
#https://dplyr.tidyverse.org/reference/recode.html
heartData$male = recode(heartData$male, '1' = 'male', '0' = 'female')
names(heartData)[1] = 'Gender'
unique(heartData$Gender)
heartData$education = recode(heartData$education, '1'='SomeHighSchool', '2'='FinishedHighSchool/GED',
'3'='SomeCollege/VocationalSchool', '4'='College')
unique(heartData$education)
heartData$currentSmoker = recode(heartData$currentSmoker, '1'='Yes', '0'='No')
unique(heartData$currentSmoker)
heartData$BPMeds = recode(heartData$BPMeds, '1'='Yes', '0'='No')
unique(heartData$BPMeds)
unique(heartData$prevalentStroke)
heartData$prevalentStroke = recode(heartData$prevalentStroke, '1'='Yes', '0'='No')
unique(heartData$prevalentHyp)
heartData$prevalentHyp = recode(heartData$prevalentHyp, '1'='Yes', '0'='No')
unique(heartData$TenYearCHD)
heartData$TenYearCHD = recode(heartData$TenYearCHD, '1'='Yes', '0'='No')
unique(heartData$diabetes)
heartData$diabetes = recode(heartData$diabetes, '1'='Yes', '0'='No')
sapply(heartData, class)
cols_factor <- c("Gender", "education", "currentSmoker", "BPMeds", "prevalentStroke", "prevalentHyp", "diabetes", "TenYearCHD")
heartData[cols_factor] <- lapply(heartData[cols_factor], factor)
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
colSums(numeric_cols)
colSums(is.na(heartData))
summary(heartData)
dim(heartData)
dim(na.omit(heartData))
3658/4240
heartData = na.omit(heartData)
dim(heartData)
summary(heartData)
levels(heartData$TenYearCHD)
heartData$TenYearCHD = relevel(heartData$TenYearCHD, ref='No')
aggregate(glucose~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=glucose)) + geom_boxplot()
aggregate(heartRate~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=heartRate)) + geom_boxplot()
aggregate(BMI~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=BMI)) + geom_boxplot()
aggregate(diaBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=diaBP)) + geom_boxplot()
aggregate(sysBP~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=sysBP)) + geom_boxplot()
aggregate(totChol~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=totChol)) + geom_boxplot()
aggregate(cigsPerDay~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=cigsPerDay)) + geom_boxplot()
aggregate(age~TenYearCHD, data=heartData, summary)
ggplot(heartData, aes(x=TenYearCHD, y=age)) + geom_boxplot()
for (i in colnames(numeric_cols)){
hist(heartData[[i]])
}
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData)
pairs(~ age + cigsPerDay + totChol + sysBP + diaBP + BMI + heartRate + glucose, data=heartData,
col=heartData$TenYearCHD)
heartData.cor <- heartData %>% select(age, cigsPerDay, totChol, sysBP, diaBP, BMI, heartRate, glucose) %>%
cor()
heartData.cor
heatmap.2(heartData.cor,col=redgreen(20),
density.info="none", trace="none", dendrogram=c("row"),
symm=F,symkey=T,symbreaks=T, scale="none")
attach(heartData)
prop.table(table(TenYearCHD,diabetes),2)
plot(TenYearCHD~diabetes,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentHyp),2)
plot(TenYearCHD~prevalentHyp,col=c("red","blue"))
prop.table(table(TenYearCHD,prevalentStroke),2)
plot(TenYearCHD~prevalentStroke,col=c("red","blue"))
prop.table(table(TenYearCHD,BPMeds),2)
plot(TenYearCHD~BPMeds,col=c("red","blue"))
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~currentSmoker,col=c("red","blue"))
prop.table(table(TenYearCHD,education),2)
mosaicplot(TenYearCHD~education, las=1, main = 'Education vs Heart Disease')
prop.table(table(TenYearCHD,currentSmoker),2)
plot(TenYearCHD~Gender,col=c("red","blue"), las=1)
ftable(addmargins(table(heartData$TenYearCHD,heartData$currentSmoker)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$Gender)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$education)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$BPMeds)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentStroke)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$prevalentHyp)))
ftable(addmargins(table(heartData$TenYearCHD,heartData$diabetes)))
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
pc.scores<-pc.result$x
pc.scores<-data.frame(pc.scores)
pc.scores$TenYearCDH<-heartData$TenYearCHD
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCDH), size=1)+
ggtitle("PCA of Framingham Heart Disease Data")
rf.pred<-predict(heartData.rf,newdata=heartData.test,type="prob")
numeric_cols <- subset(heartData, select = -c(Gender, education, currentSmoker, BPMeds, prevalentStroke, prevalentHyp, diabetes, TenYearCHD))
pc.result<-prcomp(numeric_cols,scale.=TRUE)
pc.scores<-pc.result$x
pc.scores<-data.frame(pc.scores)
pc.scores$TenYearCDH<-heartData$TenYearCHD
pc.result$rotation
pc.eigen<-(pc.result$sdev)^2
pc.prop<-pc.eigen/sum(pc.eigen)
pc.cumprop<-cumsum(pc.prop)
plot(1:9,pc.prop,type="l",main="Scree Plot",ylim=c(0,1),xlab="PC #",ylab="Proportion of Variation")
pc.eigen<-(pc.result$sdev)^2
pc.prop<-pc.eigen/sum(pc.eigen)
pc.cumprop<-cumsum(pc.prop)
plot(1:8,pc.prop,type="l",main="Scree Plot",ylim=c(0,1),xlab="PC #",ylab="Proportion of Variation")
lines(1:8,pc.cumprop,lty=3)
#ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
#  geom_point(aes(col=TenYearCDH), size=1)+
#  ggtitle("PCA of Framingham Heart Disease Data")
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=Censor), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Gene Expression Data")
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCHD), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Gene Expression Data")
ggplot(data = pc.scores, aes(x = PC1, y = PC3)) +
geom_point(aes(col=TenYearCHD), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Gene Expression Data")
ggplot(data = pc.scores, aes(x = PC2, y = PC3)) +
geom_point(aes(col=TenYearCHD), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Gene Expression Data")
pc.eigen<-(pc.result$sdev)^2
pc.prop<-pc.eigen/sum(pc.eigen)
pc.cumprop<-cumsum(pc.prop)
plot(1:8,pc.prop,type="l",main="Scree Plot",ylim=c(0,1),xlab="PC #",ylab="Proportion of Variation")
lines(1:8,pc.cumprop,lty=3)
ggplot(data = pc.scores, aes(x = PC1, y = PC2)) +
geom_point(aes(col=TenYearCHD), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Coronary Heart Disease Data")
ggplot(data = pc.scores, aes(x = PC1, y = PC3)) +
geom_point(aes(col=TenYearCHD), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Coronary Heart Disease Data")
ggplot(data = pc.scores, aes(x = PC2, y = PC3)) +
geom_point(aes(col=TenYearCHD), size=1)+
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
ggtitle("PCA plot of Coronary Heart Disease Data")
